#include <stdio.h>
#include<stdlib.h>
 
struct node
{
    int info;
    struct node *ptr;
}*top,*top1,*temp;

void push(int data);
void pop();
void empty();
void display();
void stack_count();
void create();
void menu();
 
int count=0;

void menu()
{
 int no,ch,e;
 
    printf("\n 1-Push");
    printf("\n 2-Pop");
    printf("\n 3-Empty");
    printf("\n 4-Exit");
    printf("\n 5-Dipslay");
    printf("\n 6-Stack Count");
 
    create();
    while(1)
    {
     printf("\nEnter choice=");
     scanf("%d",&ch);
 
     switch(ch)
     {
      case 1:printf("Enter data=");
             scanf("%d",&no);
	     push(no);
	     break;

      case 2:pop();
             break;

      case 3:empty();
             break;

      case 4:exit(0);
   
      case 5:display();
             break;
   
      case 6:stack_count();
             break;
     }
  }
}

int main()
{
 menu();
 return 0;    
}
 
void create()
{
 top=NULL;
}
 

void stack_count()
{
 printf("\nNo.of elements in stack=%d",count);
}
 

void push(int data)
{
 if(top==NULL)
 {
  top=(struct node*)malloc(1*sizeof(struct node));
  top->ptr=NULL;
  top->info=data;
 }
 else
 {
  temp=(struct node*)malloc(1*sizeof(struct node));
  temp->ptr=top;
  temp->info=data;
  top=temp;
 }

 count++;
}
 
void display()
{
 top1=top;
 
 if(top1==NULL)
 {
  printf("Stack is empty");
  return;
 }
 
 while(top1!=NULL)
 {
  printf("%d ",top1->info);
  top1=top1->ptr;
 }
}

void pop()
{
    top1=top;
 
    if(top1==NULL)
    {
        printf("\nError");
        return;
    }
    else
        top1=top1->ptr;
    printf("\nPopped value=%d",top->info);
    free(top);
    top=top1;
    count--;
}

void empty()
{
    if(top==NULL)
    {
     printf("\n Stack is empty");
    }
    
    else
    {
     printf("\nStack is not empty.It has %d elements",count);
    }
}
